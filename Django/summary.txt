python -m venv venv
python pip install django
//verificar se o django está funcionando.
    python .\manage.py runserver 
// criar tabelas automaticamente  
    python .\manage.py sqlmigrate auth 0001
    python .\manage.py sqlmigrate sessions 0001
    python.\ manage.py showmigrations
// implementar as migrações    
    python.\ manage.py migrate
// criar um aplicativo    
python.\ manage.py startapp blog

// desenvoler as tabelas
models.py
    from django.db import models
    from django.contrib.auth.models import User 
        class post
            title, slug, author, body, created, update.

apps.py pegar os dados para inserir no setting.
setting > installed_APPS =
"blog.apps.BlogConfig",

// aplicar as configurações para o banco de dados
    python .\manage.py makemigrations blog
    python .\manage.py sqlmigrate blog 0001
    python .\manage.py migrte blog
// criar admin
    python,\manage.py createsuperuser
    127.0.0.1:8000/admin
// traduzir à interface
    setting > lenguage code "pt-br"

// customisar o adimin
    admin.py
    from .models import Post
    admin.site.register(Post)
    class PostAdmin(admin.ModelAdmin):
    list_display =
    prepopulated_fields = {'slug':('title',)}

// só para saber.
    pip install ipython
    from blog.models import Post
    posts = Post.objects.all()
    post
    post = Post.objects.get(id=1)
    post.author
    post.created
    post.title
    post.title = "Meu Primeiro Artigo"
    post.save()
    Post.objects.filter(author_username="joaoa")
    from django.contrib.auth.models import User
    user = User.objects.get(username="joaoa")
    user
    user.post_set.all()

// 
    view.py
    from django.views.generic import DetailView, ListView
    from .models import Post
    class PostListView(ListView):
        models = Post
    class PostDetailView(DetailView):
        model = Post
// conectar view com url
    cirar urls.py na masta migrations
    from django.urls import path
    from .import views
    app_name = "blog"
    urlPattern = [
        path("", views.PostListView.as_view(), name="list"),
        path("<slug:slug>/", views.PostDetailView.as_view(), name="detail"),
]
// editar urls.py dentro da pasta do projeto.
